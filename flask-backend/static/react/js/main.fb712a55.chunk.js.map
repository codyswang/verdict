{"version":3,"sources":["images/logo.png","components/form.js","components/verdictStyle.js","components/results.js","App.js","index.js"],"names":["module","exports","Form","props","useState","chat","setChat","id","onSubmit","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","setSentiment","sentiment","setVerdict","verdict","setKeywords","keywords","setSentences","worstSentence","map","sentence","i","worstScore","filter","item","className","onChange","target","value","name","rows","cols","placeholder","type","class","onClick","VerdictStyle","Results","formattedSentences","sentences","scole","scope","join","App","src","Logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.fb712a55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.e26f5965.png\";","import React, {useState} from 'react'\n\nexport default function Form(props) {\n  const [chat, setChat] = useState('');\n\n  // On submission of form, send a POST request to Flask server\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const requestOptions = {\n      method : 'POST',\n      headers: { 'Content-Type' : 'application/json'},\n      body: JSON.stringify({chat})\n    }\n\n    // Send POST request and then update states in App.js\n    fetch('/sentiment', requestOptions)\n      .then(res => res.json())\n      .then(res => {\n        props.setSentiment(res.sentiment);\n        props.setVerdict(res.verdict);\n        props.setKeywords(res.keywords);\n        props.setSentences(res.worstSentence.map((sentence, i) => {\n          return [sentence, res.worstScore[i]];\n      }).filter((item) => item[0] !== ''));\n      });\n  }\n\n  // Handle text area\n  function handleChange(e) {\n    setChat(e.target.value);\n  }\n\n  // Return component\n  return (\n    <div id=\"form-container\">\n      <form id=\"chat-form\" onSubmit={handleSubmit}>\n        <h2 className=\"label-wrapper\">\n        </h2>\n        <textarea onChange={handleChange} value={chat} id=\"chatlog\" name=\"new-input\" rows=\"7\" cols=\"50\" placeholder=\"Input a chatlog and determine its sentiment.\" />\n      <br/>\n          <button type=\"submit\" className=\"btn submitButton btn-lrg btn-danger\">\n            Check Toxicity\n          </button>\n          <div class=\"divider\"/>\n          <button className=\"btn btn-lrg btn-secondary\" onClick={() => setChat('')}>\n            Reset\n          </button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Conditional component for the verdict\nexport default function VerdictStyle(props) {\n    if(props.verdict === \"NOT TOXIC\") {\n      return <span id=\"not-toxic\">NOT TOXIC</span>\n    }\n    if(props.verdict === \"???\") {\n      return <span id=\"question\">?</span>\n    }\n    return <span id=\"toxic\">TOXIC</span>\n}\n\n","import React from 'react'\nimport VerdictStyle from './verdictStyle'\n\n// Conditional component for the verdict\nexport default function Results(props) {\n\n  // Map each sentence pair (string, sentiment) to a list element\n  const formattedSentences = props.sentences.map((sentence, i) => {\n    return <tr><td>{sentence[0]}</td><td>{sentence[1]}</td></tr>\n  });\n\n  return (\n    <div id=\"result\">\n      <div id=\"sentences\">\n        <table className=\"table table-danger table-striped table-bordered\">\n          <thead className=\"thead-dark\">\n            <tr>\n            <th scole=\"col\">Phrase</th>\n            <th scope=\"col\">Sentiment</th>\n            </tr>\n          </thead>\n          <tbody>\n            {formattedSentences}\n          </tbody>\n        </table>\n      </div>\n      <div id=\"keywords\" className=\"card\">\n        <div className=\"card-body\">\n          <h5 class=\"card-title\">Key Phrases</h5>\n          <p class=\"card-text\">{props.keywords.join()}</p>\n        </div>\n      </div>\n      <div id=\"sentiment\" className=\"card\">\n        <div className=\"card-body\">\n          <h5 class=\"card-title\">Overall sentiment</h5>\n          <p class=\"card-text\">{props.sentiment}</p>\n        </div>\n      </div>\n      <div id=\"verdict\" className=\"card\">\n        <div className=\"card-body\">\n          <h5 class=\"card-title\">Result</h5>\n          <p class=\"card-text\"><VerdictStyle verdict={props.verdict}/></p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n","import React, {useState} from 'react';\nimport Form from './components/form'\nimport Results from './components/results'\nimport Logo from './images/logo.png'\nimport './App.css'\n\nfunction App() {\n  // Set up states for app\n  const [sentiment, setSentiment] = useState(0);\n  const [verdict, setVerdict] = useState(\"???\");\n  const [sentences, setSentences] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n\n  // Return App component\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <img id=\"logo\" src={Logo}/><span>Verdict.</span>\n      </div>\n      <div className=\"row\">\n        <div id=\"left-column\" className=\"column\">\n          <Form setSentences={setSentences} setKeywords={setKeywords} setSentiment={setSentiment} setVerdict={setVerdict}/>\n        </div>\n\n        <div id=\"right-column\" className=\"column\">\n          <Results sentiment={sentiment} keywords={keywords} verdict={verdict} sentences={sentences}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}