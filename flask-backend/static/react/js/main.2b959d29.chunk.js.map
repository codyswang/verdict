{"version":3,"sources":["components/form.js","components/verdictStyle.js","components/results.js","App.js","index.js"],"names":["Form","props","useState","chat","setChat","id","onSubmit","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","setSentiment","sentiment","setVerdict","verdict","setSentences","worstSentence","map","sentence","i","setKeywords","keywords","worstScore","filter","item","className","htmlFor","onChange","target","value","name","rows","cols","placeholder","type","class","onClick","VerdictStyle","Results","formattedSentences","sentences","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEe,SAASA,EAAKC,GAAQ,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAgClC,OACE,yBAAKC,GAAG,kBACN,0BAAMA,GAAG,YAAYC,SA9BzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAiB,CACrBC,OAAS,OACTC,QAAS,CAAE,eAAiB,oBAC5BC,KAAMC,KAAKC,UAAU,CAACX,UAIxBY,MAAM,aAAcN,GACjBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJhB,EAAMkB,aAAaF,EAAIG,WACvBnB,EAAMoB,WAAWJ,EAAIK,SACrBrB,EAAMsB,aAAaN,EAAIO,cAAcC,KAAI,SAACC,EAAUC,GAEpD,OADA1B,EAAM2B,YAAYX,EAAIY,UACf,CAACH,EAAUT,EAAIa,WAAWH,OAChCI,QAAO,SAACC,GAAD,MAAsB,KAAZA,EAAK,YAavB,wBAAIC,UAAU,iBACZ,2BAAOC,QAAQ,YAAY7B,GAAG,oBAA9B,aAIF,8BAAU8B,SAbhB,SAAsB5B,GACpBH,EAAQG,EAAE6B,OAAOC,QAYqBA,MAAOlC,EAAME,GAAG,UAAUiC,KAAK,YAAYC,KAAK,IAAIC,KAAK,KAAKC,YAAY,iDAC9G,6BACI,4BAAQC,KAAK,SAAST,UAAU,uCAAhC,kBAGA,yBAAKU,MAAM,YACX,4BAAQV,UAAU,4BAA4BW,QAAS,kBAAMxC,EAAQ,MAArE,WC7CK,SAASyC,EAAa5C,GACjC,MAAqB,cAAlBA,EAAMqB,QACA,0BAAMjB,GAAG,aAAT,aAEY,QAAlBJ,EAAMqB,QACA,0BAAMjB,GAAG,YAAT,KAEF,0BAAMA,GAAG,SAAT,SCNI,SAASyC,EAAQ7C,GAG9B,IAAM8C,EAAqB9C,EAAM+C,UAAUvB,KAAI,SAACC,EAAUC,GACxD,OAAO,4BAAI,4BAAKD,EAAS,IAAQ,4BAAKA,EAAS,QAGjD,OACE,yBAAKrB,GAAG,UACN,0BAAMA,GAAG,aAAT,cAAiCJ,EAAMmB,WACvC,6BACA,0BAAMf,GAAG,WAAT,WAA2B,kBAACwC,EAAD,CAAcvB,QAASrB,EAAMqB,WACxD,6BACA,yBAAKjB,GAAG,aACN,+BACA,wCACA,yCACC0C,K,MCAME,MAhBf,WAAe,MAEqB/C,mBAAS,GAF9B,mBAENkB,EAFM,KAEKD,EAFL,OAGiBjB,mBAAS,OAH1B,mBAGNoB,EAHM,KAGGD,EAHH,OAIqBnB,mBAAS,IAJ9B,mBAIN8C,EAJM,KAIKzB,EAJL,OAKmBrB,mBAAS,IAL5B,mBAKI0B,GALJ,WAQb,OACE,yBAAKK,UAAU,OACb,kBAACjC,EAAD,CAAMuB,aAAcA,EAAcK,YAAeA,EAAaT,aAAcA,EAAcE,WAAYA,IACtG,kBAACyB,EAAD,CAAS1B,UAAWA,EAAWE,QAASA,EAAS0B,UAAWA,MCXlEE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"js/main.2b959d29.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport default function Form(props) {\n  const [chat, setChat] = useState('');\n\n  // On submission of form, send a POST request to Flask server\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const requestOptions = {\n      method : 'POST',\n      headers: { 'Content-Type' : 'application/json'},\n      body: JSON.stringify({chat})\n    }\n\n    // Send POST request and then update states in App.js\n    fetch('/sentiment', requestOptions)\n      .then(res => res.json())\n      .then(res => {\n        props.setSentiment(res.sentiment);\n        props.setVerdict(res.verdict);\n        props.setSentences(res.worstSentence.map((sentence, i) => {\n        props.setKeywords(res.keywords);\n        return [sentence, res.worstScore[i]];\n      }).filter((item) => item[0] !== ''));\n      });\n  }\n\n  // Handle text area\n  function handleChange(e) {\n    setChat(e.target.value);\n  }\n\n  // Return component\n  return (\n    <div id=\"form-container\">\n      <form id=\"chat-form\" onSubmit={handleSubmit}>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-input\" id=\"text-description\">\n            Verdict.\n          </label>\n        </h2>\n        <textarea onChange={handleChange} value={chat} id=\"chatlog\" name=\"new-input\" rows=\"5\" cols=\"50\" placeholder=\"Input a chatlog and determine its sentiment.\" />\n      <br/>\n          <button type=\"submit\" className=\"btn submitButton btn-lrg btn-danger\">\n            Check Toxicity\n          </button>\n          <div class=\"divider\"/>\n          <button className=\"btn btn-lrg btn-secondary\" onClick={() => setChat('')}>\n            Reset\n          </button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Conditional component for the verdict\nexport default function VerdictStyle(props) {\n    if(props.verdict === \"NOT TOXIC\") {\n      return <span id=\"not-toxic\">NOT TOXIC</span>\n    }\n    if(props.verdict === \"???\") {\n      return <span id=\"question\">?</span>\n    }\n    return <span id=\"toxic\">TOXIC</span>\n}\n\n","import React from 'react'\nimport VerdictStyle from './verdictStyle'\n\n// Conditional component for the verdict\nexport default function Results(props) {\n\n  // Map each sentence pair (string, sentiment) to a list element\n  const formattedSentences = props.sentences.map((sentence, i) => {\n    return <tr><td>{sentence[0]}</td><td>{sentence[1]}</td></tr>\n  });\n\n  return (\n    <div id=\"result\">\n      <span id=\"sentiment\">Sentiment: {props.sentiment}</span>\n      <br/>\n      <span id=\"verdict\">Result: <VerdictStyle verdict={props.verdict}/></span>\n      <br/>\n      <div id=\"sentences\">\n        <table>\n        <th>Sentence</th>\n        <th>Sentiment</th>\n        {formattedSentences}\n        </table>\n      </div>\n    </div>\n  )\n}\n\n\n","import React, {useState} from 'react';\nimport Form from './components/form'\nimport Results from './components/results'\nimport './App.css'\n\nfunction App() {\n  // Set up states for app\n  const [sentiment, setSentiment] = useState(0);\n  const [verdict, setVerdict] = useState(\"???\");\n  const [sentences, setSentences] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n\n  // Return App component\n  return (\n    <div className=\"App\">\n      <Form setSentences={setSentences} setKeywords = {setKeywords} setSentiment={setSentiment} setVerdict={setVerdict}/ >\n      <Results sentiment={sentiment} verdict={verdict} sentences={sentences}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}